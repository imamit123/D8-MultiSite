<?php
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Database\Database;
use Drupal\taxonomy\TermInterface;
/**
 * Implements hook_help().
 */
function idg_wordtracer_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.idg_wordtracer':
      return '<h3>' . t('Introduction') . '</h3>' . '<p>' . t('It used to calculate appearance of taxonomy term in  particular content.') . '</p>';
  }
}

function idg_wordtracer_node_presave(Drupal\node\NodeInterface $node){
	if($node->gettype() == 'common_content'){
		//Get tids of all 
		$connection = Database::getConnection();
		$query = $connection->select('taxonomy_term_field_data', 'ttfd');
		$query->fields('ttfd',array('name'));
		$query->fields('ttfd',array('tid'));
		$query->condition('ttfd.vid', 'idg_new_taxonomy');
		//$query->condition('ttfd.name', $subject_type);
		$data = $query->execute();
		$results = $data->fetchAll(\PDO::FETCH_OBJ);
		
		foreach ($results as $key=>$Value) {
			$keywords[$Value->tid] = strtolower($Value->name);
		}

		//get field values
    	$node_title = $node->get('title')->value;
    	$node_teaser  = $node->get('field_teaser')->value;
    	$node_body = $node->get('body')->value;
    	$field_values = array('title'=>$node_title, 'teaser'=>$node_teaser, 'body'=>$node_body);

    	$idg_new_taxonomy = $node->get('idg_new_taxonomy')->getValue();
    	foreach ($idg_new_taxonomy as $key => $value) {
    		$added_keywords[] = $value['target_id'];
    	}
    	
    	$matching_tids = get_matching_keywords($field_values, $keywords);
    	//Update previously selected tids and matched tids
    	$updated_tids = array_unique(array_merge($added_keywords, $matching_tids));
    	if(!empty($updated_tids)){
    		$node->idg_new_taxonomy = $updated_tids;
    	}
    }
}


//function to get tids for all keyword occurences and parent tids
function get_matching_keywords($field_arr, $keywords){
    foreach ($field_arr as $key => $value) {
    	//strip all html tags
    	$field_value = strip_tags($value);
    	//convert string to lower case
    	$field_value = strtolower($field_value);
    	//Clean up string for spaces
   		$field_value = preg_replace("/(?:\s|&nbsp;)+/", " ", $field_value);
   		if (sizeof($keywords>1) && strlen($field_value)>1){
	      	foreach ($keywords as $tid=>$name) {
	        	$key_count = substr_count($field_value, trim(strtolower($name)));
	        	if ($key_count != 0) {
	        		$matched_keys[] = $tid;
	        		//remove matched key so that same key is not searched again
	        		unset($keywords[$tid]);
	        		//Get all Parent tids for matched tid
	        		$storage = \Drupal::service('entity_type.manager')->getStorage('taxonomy_term');
					$parent_terms = $storage ->loadallParents($tid);
					foreach ($parent_terms as $key => $value) {
						$matched_keys[] = $key;
						unset($keywords[$key]);
					}
	        		
	        	}
			}
		}
	}
	return array_unique($matched_keys);
}