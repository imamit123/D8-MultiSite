<?php

/**
 * @file
 * Functions to support theming in the CIO theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Database\Database;
use Drupal\taxonomy\Entity\Term;
//use Drupal\Core\Cache\Cache;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function fintech_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'no-sidebars';
  }

  $variables['google_analytics'] = google_analytics();
}  
   

function fintech_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }
}


function google_analytics() {
  $author = get_author_name();
  $author_name = $author['author_name'];
    $guid = $author['guid'];
    $type = $author['type'];
    $published = $author['created'];
if ($node = \Drupal::routeMatch()->getParameter('node')) {
  $node_type = $node->bundle();
    if ($node_type == 'common_content') {
  return "<script type='text/javascript'>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-61646-28', 'auto');
    ga('send', 'pageview' ,{'dimension1':'".$author_name."','dimension2':'".$guid."','dimension3':'".$type."','dimension4':'".$published."'});
    
   
  </script>";
 } else {
  return "<script type='text/javascript'>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-61646-28', 'auto');
    ga('send', 'pageview');
    
   
  </script>";
  }
}
  else {
  return "<script type='text/javascript'>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-61646-28', 'auto');
    ga('send', 'pageview');
    
   
  </script>";
  }
}

function get_author_name() {
 //error_reporting(E_ALL);
//ini_set('display_errors', 1);
  $google_array = array();

  //$path = \Drupal::request()->getpathInfo();
  //$arg  = explode('/',$path);
  //$node = \Drupal::routeMatch()->getParameter('node');
  //print_r($node);

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
       //its a node
    $node_type = $node->bundle();
if($node_type == 'common_content') {
   if(isset($node->get('field_auth_name')->value) && !empty($node->get('field_auth_name')->value)) {
     $node_author = $node->get('field_auth_name')->value;
   }
  else {
    $noderef = $node->get('field_author_reference')->getValue();
    if(!empty($noderef)) {
          $noderefid = $noderef[0]['target_id'];
            $noderefload = \Drupal\node\Entity\Node::load($noderefid);
              $node_author = $noderefload->getTitle();
            }
      else {
        $node_author = "none";
      }
}
      $node_guid = $node->get('field_new_guid')->value;
        $tid = $node->get('field_common_category')->getValue();
        $tid = $tid[0]['target_id'];
        $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);


    $name = $term->getName();
//echo $name;
       // $node_date = $node->get('created')->value;
$node_date = $node->get('field_first_publish_date')->value;
 $google_array['author_name'] = $node_author;
       $google_array['guid'] = $node_guid;
        $google_array['type'] = $name;
        $google_array['created'] = date('m/d/Y',$node_date);

    }
    else {
        $google_array['guid'] = "none";
        $google_array['created'] = "none";
        $google_array['type'] = "none";
        $google_array['author_name'] = "none";
    }
  }
  else {
   $google_array['guid'] = "none";
    $google_array['created'] = "none";
   $google_array['type'] = "none";
   $google_array['author_name'] = "none";
  }

  return $google_array;
}

